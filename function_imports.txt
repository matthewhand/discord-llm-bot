src/command/common/mute.ts:import { CommandInteraction, GuildMember } from 'discord.js';
src/command/common/user.ts:import { GuildMember } from 'discord.js';
src/command/common/replicate.ts:import { getRandomErrorMessage } from '@src/common/errors/errorMessages';
src/command/common/server.ts:import { CommandInteraction } from 'discord.js';
src/command/inline/mute.ts:import { ICommand } from '@src/types/Command';
src/command/inline/mute.ts:import { CommandInteraction } from 'discord.js';
src/command/inline/mute.ts:import { muteUser } from '@src/command/common/mute';
src/command/inline/http.ts:import { ICommand } from '@src/command/types/Command';
src/command/inline/memgpt.ts:import { ICommand } from '@src/command/types/Command';
src/command/inline/memgpt.ts:import { getRandomErrorMessage } from '../../common/errors/errorMessages';
src/command/inline/perplexity.ts:import { performPerplexitySearch } from '@src/command/common/perplexity';
src/command/inline/oai.ts:import { ICommand } from '@src/command/types/Command';
src/command/inline/oai.ts:import { getRandomErrorMessage } from '../../common/errors/errorMessages';
src/command/inline/help.ts.offline:import { Message } from 'discord.js';
src/command/inline/help.ts.offline:import { COMMAND_PREFIX } from '@config/environment';
src/command/inline/help.ts.offline:import { logger } from '@utils/logger';
src/command/inline/help.ts.offline:import { getAvailableCommands } from '../utils/commandUtils';
src/command/inline/ban.ts:import { Message } from 'discord.js';
src/command/inline/ban.ts:import { ICommand } from '../types/ICommand';
src/command/inline/user.ts:import { CommandInteraction } from 'discord.js';
src/command/inline/user.ts:import { ICommand } from '@src/command/types/Command';
src/command/inline/user.ts:import { handleUserCommand } from '@src/command/common/user';
src/command/inline/report.ts:import { Message, TextChannel, MessageCollector } from 'discord.js';
src/command/inline/report.ts:import { BaseCommand } from '../types/BaseCommand';
src/command/inline/replicate.ts:import { ICommand } from '@src/command/types/Command';
src/command/inline/replicate.ts:import { analyzeImage } from '@src/command/common/replicate';
src/command/inline/index.ts:import { ICommand } from '../types/ICommand';
src/command/inline/server.ts:import { ICommand } from '@src/command/types/Command';
src/command/inline/server.ts:import { handleServerCommand } from '@src/command/common/server';
src/command/types/BaseCommand.ts:import { ICommand } from './ICommand';
src/command/handlers/slashCommandHandler.ts:import { REST } from '@discordjs/rest';
src/command/handlers/slashCommandHandler.ts:import { Routes } from 'discord-api-types/v9';
src/command/handlers/slashCommandHandler.ts:import { Client, CommandInteraction } from 'discord.js';
src/command/slash/mute.ts:import { SlashCommandBuilder } from 'discord.js';
src/command/slash/mute.ts:import { muteUser } from '@src/command/common/mute';
src/command/slash/mute.ts:import { CommandInteraction } from 'discord.js';
src/command/slash/quivr.ts.offline:import { SlashCommandBuilder } from '@discordjs/builders';
src/command/slash/quivr.ts.offline:import { CommandInteraction } from 'discord.js';
src/command/slash/quivr.ts.offline:import { logger } from '@utils/logger';
src/command/slash/perplexity.ts:import { SlashCommandBuilder } from 'discord.js';
src/command/slash/perplexity.ts:import { searchPerplexity } from '@src/command/common/perplexity';
src/command/slash/perplexity.ts:import { CommandInteraction } from 'discord.js';
src/command/slash/user.ts:import { SlashCommandBuilder } from 'discord.js';
src/command/slash/user.ts:import { handleUserCommand } from '@src/command/common/user';
src/command/slash/config.ts.offline:import { SlashCommandBuilder } from '@discordjs/builders';
src/command/slash/config.ts.offline:import { CommandInteraction, GuildMemberRoleManager } from 'discord.js';
src/command/slash/config.ts.offline:import { isUserAllowed, isRoleAllowed } from '@message/helpers/permissions';
src/command/slash/replicate.ts:import { SlashCommandBuilder } from 'discord.js';
src/command/slash/replicate.ts:import { ICommand } from '@src/command/types/Command';
src/command/slash/replicate.ts:import { analyzeImage } from '@src/command/common/replicate';
src/command/slash/server.ts:import { SlashCommandBuilder } from 'discord.js';
src/command/slash/server.ts:import { handleServerCommand } from '@src/command/common/server';
src/command/CommandManager.ts:import { isCommand } from './isCommand';
src/command/CommandManager.ts:import { parseCommandDetails } from './parseCommandDetails';
src/command/CommandManager.ts:import { executeParsedCommand } from './executeParsedCommand';
src/command/CommandManager.ts:import { IMessage } from '../message/types/IMessage';
src/command/CommandManager.ts:import { ICommand } from '../command/types/ICommand';
src/webhook/webhookHandler.ts:import { Client, GatewayIntentBits, TextChannel } from 'discord.js';
src/webhook/webhookHandler.ts:import { predictionImageMap } from '../utils/handleImageMessage';
src/message/followUp/sendFollowUp.ts:import { sendResponse } from '@src/message/followUp/sendResponse';
src/message/followUp/messageSendingUtils.ts:import { makeOpenAiRequest } from './openAiManagerUtils';
src/message/sendFollowUpRequest.ts:import { getRandomDelay } from './common';
src/message/sendFollowUpRequest.ts:import { aliases } from '../config/aliases';
src/message/discord/DiscordManager.ts:import { Client, Message } from 'discord.js';
src/message/discord/DiscordManager.ts:import { VoiceConnection } from '@discordjs/voice'; 
src/message/discord/DiscordManager.ts:import { loginToDiscord } from './utils/loginToDiscord';
src/message/discord/DiscordManager.ts:import { sendMessageToChannel } from './utils/sendMessageToChannel';
src/message/discord/DiscordManager.ts:import { setupVoiceChannel } from './utils/setupVoiceChannel';
src/message/discord/DiscordManager.ts:import { setupEventHandlers } from './utils/setupEventHandlers';
src/message/discord/DiscordManager.ts:import { playWelcomeMessage } from './utils/playWelcomeMessage';
src/message/discord/DiscordManager.ts:import { setMessageHandler } from './utils/setMessageHandler';
src/message/discord/types/DiscordMessage.ts:import { GuildMember, Message } from 'discord.js';
src/message/discord/types/DiscordMessage.ts:import { constants } from '../../../config/constants';
src/message/discord/utils/registerSlashCommands.ts:import { REST } from '@discordjs/rest';
src/message/discord/utils/registerSlashCommands.ts:import { Routes } from 'discord-api-types/v9';
src/message/discord/utils/setupEventHandlers.ts:import { Client, Message } from 'discord.js';
src/message/discord/utils/setupEventHandlers.ts:import { DiscordMessageModel } from '../types/DiscordMessage';
src/message/discord/utils/fetchMessages.ts:import { Client, Message as DiscordMessage, TextChannel } from 'discord.js';
src/message/discord/utils/fetchMessages.ts:import { DiscordMessageModel } from '../types/DiscordMessage';
src/message/discord/utils/sendMessageToChannel.ts:import { Client, Message, TextChannel } from 'discord.js';
src/message/discord/utils/fetchChannel.ts:import { Client, Channel } from 'discord.js';
src/message/discord/utils/setupVoiceChannel.ts:import { Client, PermissionsBitField, VoiceChannel } from 'discord.js';
src/message/discord/utils/setupVoiceChannel.ts:import { joinVoiceChannel, VoiceConnection, VoiceConnectionStatus, EndBehaviorType } from '@discordjs/voice';
src/message/discord/utils/setupVoiceChannel.ts:import { playWelcomeMessage } from './playWelcomeMessage';
src/message/discord/utils/setupVoiceChannel.ts:import { handleAudioStream } from './handleAudioStream';
src/message/discord/utils/playAudioResponse.ts:import { createAudioPlayer, createAudioResource, AudioPlayerStatus, VoiceConnection } from '@discordjs/voice';
src/message/discord/utils/sendResponse.ts:import { Client, TextChannel } from 'discord.js';
src/message/discord/utils/sendResponse.ts:import { splitMessage } from './splitMessage';
src/message/discord/utils/sendMessage.ts:import { sendResponse } from './sendResponse';
src/message/discord/utils/loginToDiscord.ts:import { Client } from 'discord.js';
src/message/discord/utils/handleAudioStream.ts:import { Readable } from 'stream';
src/message/discord/utils/handleAudioStream.ts:import { VoiceConnection } from '@discordjs/voice';
src/message/discord/utils/handleAudioStream.ts:import { convertOpusToWav } from './convertOpusToWav';
src/message/discord/utils/handleAudioStream.ts:import { transcribeAudio, generateResponse, playAudioResponse } from './audioProcessing';
src/message/discord/utils/startTyping.ts:import { Client, PermissionsBitField } from 'discord.js';
src/message/discord/utils/playWelcomeMessage.ts:import { VoiceConnection, createAudioPlayer, createAudioResource, AudioPlayerStatus } from '@discordjs/voice';
src/message/discord/utils/convertOpusToWav.ts:import { spawn } from 'child_process';
src/message/discord/utils/convertOpusToWav.ts:import { Readable } from 'stream';
src/message/followUpRequest.ts:import { getRandomAliasCommand } from './aliasUtils';
src/message/followUpRequest.ts:import { sendLlmRequest } from './sendLlmRequest';
src/message/helpers/sendResponse.ts:import { splitMessageContent } from '@message/helpers/splitMessage';
src/message/helpers/mutingUtils.ts:import { MessageEmbed, TextChannel } from 'discord.js';
src/message/helpers/shouldProcessMessage.ts:import { getLastMessageTimestamp } from './timestampFunctions';
src/message/helpers/reconstructCommandFromAlias.ts:import { aliases } from '../config/aliases';
src/message/helpers/chatHistoryUtils.ts:import { encode } from 'gpt-tokenizer';
src/message/helpers/getInitialDelay.ts:import { getLastTypingTimestamp } from './timestampFunctions';
src/message/handlers/messageHandler.ts:import { IMessage } from '@src/message/types/IMessage';
src/message/handlers/messageHandler.ts:import { LLMInterface } from '@src/llm/LLMInterface';
src/message/handlers/messageHandler.ts:import { sendResponse } from '@src/message/followUp/sendResponse';
src/message/handlers/messageHandler.ts:import { sendFollowUp } from '@src/message/followUp/sendFollowUp';
src/message/handlers/messageHandler.ts:import { prepareMessageBody } from '@src/message/utils/messageProcessing/prepareMessageBody';
src/message/handlers/messageHandler.ts:import { summarizeMessage } from '@src/message/utils/messageProcessing/summarizeMessage';
src/message/handlers/messageHandler.ts:import { processCommand } from '@src/message/utils/messageProcessing/processCommand';;
src/utils/rateLimiter.ts:import { LLM_MESSAGE_LIMIT_PER_HOUR, LLM_MESSAGE_LIMIT_PER_DAY } from '../config/ConfigurationManager';
src/utils/reconstructCommandFromAlias.ts:import { aliases } from '@src/config/aliases';
src/utils/index.ts:import { handleError } from '@src/utils/commonUtils';
src/utils/aliasUtils.ts:import { aliases } from '../config/aliases';
src/llm/OpenAiManager.ts:import { handleError } from '../utils/commonUtils';
src/llm/OpenAiManager.ts:import { extractContent } from './openAiUtils';
src/llm/openai/OpenAiManager.ts:import { IMessage } from '../message/IMessage';
src/llm/openai/OpenAiManager.ts:import { LLMResponse } from '../message/LLMResponse';
src/llm/openai/OpenAiManager.ts:import { extractContent } from './utils/extractContent';
src/llm/openai/OpenAiManager.ts:import { makeOpenAiRequest } from './utils/makeOpenAiRequest';
src/llm/openai/OpenAiManager.ts:import { completeSentence } from './utils/completeSentence';
src/llm/openai/OpenAiManager.ts:import { needsCompletion } from './utils/needsCompletion';
src/llm/openai/OpenAiManager.ts:import { getEmoji } from '@src/utils/getEmoji';;
src/llm/openai/OpenAiManager.ts:import { handleError, redactSensitiveInfo } from '@src/utils/commonUtils';;
src/index.ts:import { messageHandler } from '@message/handlers/messageHandler';
