import { IMessage } from '@src/message/interfaces/IMessage';
import { COMMAND_PREFIX } from '@config/environment';
import { debug } from '@operations/debug';
import { getAvailableCommands } from '../operations/commandUtils';

/**
 * Executes the help command, providing a list of available commands.
 * 
 * @param message - The message object encapsulated in the generic IMessage interface.
 * @param args - The arguments passed with the help command.
 */
export function executeHelpCommand(message: IMessage, args: string[]): void {
    const prefix = process.env.COMMAND_PREFIX || COMMAND_PREFIX || '!';

    // Guard clause to check if the message object is valid
    if (!message) {
        debug.warn('[executeHelpCommand] No message object provided.');
        return;
    }

    // Log the command execution attempt
    debug.debug('[executeHelpCommand] Attempting to execute help command with prefix: ' + prefix);

    // Retrieve the list of available commands
    const availableCommands = getAvailableCommands();

    // Format the command list
    const commandList = availableCommands.map(cmd => prefix + cmd.name + ' - ' + cmd.description).join('\n');

    // Respond with the list of available commands
    message.sendMessage('Here are the available commands:\n' + commandList) // Assuming IMessage has a sendMessage method
        .then(() => debug.debug('[executeHelpCommand] Help command executed successfully.'))
        .catch(error => debug.error('[executeHelpCommand] Error sending help message: ' + error));
}
