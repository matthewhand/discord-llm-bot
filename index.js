
const { Client, Intents } = require('discord.js');
const { REST } = require('@discordjs/rest');
const { Routes } = require('discord-api-types/v9');
const { ClientID, Token } = require('./config.json');

const commands = [
  {
    name: 'execute',
    description: 'Execute a Python code snippet!',
    options: [
      {
        name: 'code',
        type: 'STRING',
        description: 'The Python code to execute',
        required: true,
      },
    ],
  },
];

const rest = new REST({ version: '9' }).setToken(Token);

(async () => {
  try {
    console.log('Started refreshing application (/) commands.');

    await rest.put(
      Routes.applicationGuildCommands(ClientID, 'guild_id'),
      { body: commands },
    );

    console.log('Successfully reloaded application (/) commands.');
  } catch (error) {
    console.error(error);
  }
})();

const client = new Client({ intents: [Intents.FLAGS.GUILDS] });

client.once('ready', () => {
  console.log('Ready!');
});

client.on('interactionCreate', async (interaction) => {
  if (!interaction.isCommand()) return;

  const { commandName } = interaction;

  if (commandName === 'execute') {
    await interaction.reply('Executing Python code...');
    // TODO: Add code execution logic
  }
});

client.login(Token);
